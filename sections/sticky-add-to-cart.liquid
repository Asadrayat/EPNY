<style>
  pqa-new{
    position: fixed;
    bottom: -150px;
    left: 0;
    width: 100%;
    background: #fff;
    z-index: 99;
    opacity: 0;
    transition: .5s;
    background: #000;
  }
  pqa-new.sticky-visible{
    bottom: 0;
    opacity: 1;
    box-shadow: 0px 0px 5px gray;
  }
  pqa-new .page-width{
    @media screen and (max-width: 800px){
      /* padding: 0;
      max-width: 100%; */
    }
  }
  .pqa-new-wrapper{
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: center;
    gap: 24px;
    @media screen and (max-width: 800px){
      grid-template-columns: minmax(0,1fr);
    }
  }

  .pqa-new-title{
    display: flex;
    box-sizing: border-box;
    gap: 12px;
    align-items: center;

   @media screen and (max-width: 800px){
     margin-bottom: 12px;
     /* display: none; */
   }
  }
  .pqa-new-title img{
    display: block;
    max-width: 100%;
    height: auto;
    width: 60px;
    aspect-ratio: 4/5;
    object-fit: cover;
  }
  .pqa-new-title .qa-title{
    color: var(--Content-Inverted-main, #F3F4F6);

    /* Headings/H3 */
    font-family: var(--font-family-Title, "Aktiv Grotesk");
    font-size: var(--Font-Size-Heading-H3, 20px);
    font-style: normal;
    font-weight: 400;
    line-height: var(--Line-Height-Heading-H3, 20px); /* 100% */
    letter-spacing: -0.4px;
    margin: 0 0 8px 0;
  }
  .pqa-new-title .qa-price{
    margin: 0;
    color: var(--Content-Inverted-main, #F3F4F6);

    /* Headings/H4 */
    font-family: var(--font-family-Title, "Aktiv Grotesk");
    font-size: var(--Font-Size-Heading-H4, 16px);
    font-style: normal;
    font-weight: 400;
    line-height: var(--Line-Height-Heading-H4, 16px); /* 100% */
    letter-spacing: -0.32px;
  }
  .pqa-new-variants{
    display: grid;
    grid-template-columns: auto auto;
    align-items: center;
    gap: 24px;
    justify-self: center;
  }
  .pqa-new-option select{
    width: 100%;
    color: #000;
    font-family: var(--font-family-Control, "Archivo Expanded");
    font-size: var(--Font-Size-Paragraph-Tiny, 12px);
    font-style: normal;
    font-weight: 400;
    line-height: var(--Line-Height-Paragraph-Tiny, 16px); /* 133.333% */
    cursor: pointer;
    -webkit-appearance: none; /* Fix for Safari */
    -moz-appearance: none; /* Fix for Firefox */
    appearance: none; /* Fix for other browsers */

    background: url('data:image/svg+xml;utf8,<svg fill="%23000000" width="20px" height="20px" viewBox="-5 -8 24 24" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMinYMin"><path d="M7.071 5.314l4.95-4.95a1 1 0 1 1 1.414 1.414L7.778 7.435a1 1 0 0 1-1.414 0L.707 1.778A1 1 0 1 1 2.121.364l4.95 4.95z"/></svg>');
    background-repeat: no-repeat;
    background-position: top 50% right 8px;
    background-size: 16px;

    min-width: 134px;
    max-width: max-content;

    box-sizing: border-box;
    padding: 8px 8px;
    border: 1px solid #E5E7EB;
    border-radius: 32px;
    padding-right: 10px;
  }

  .pqa-new-option select:focus{
    border: none;
    outline: none;
    box-shadow: none;
    border: 1px solid #E5E7EB;
  }
  .pqa-new-form button{
    display: block;
    width: 100%;
    color: #906F53;
    text-align: center;
    
    /* UI Controls/Control/Button/Small */
    font-family: var(--font-family-Body, "Aktiv Grotesk");
    font-size: var(--Font-Size-UI-Controls-Control-Button-Small, 16px);
    font-style: normal;
    font-weight: 400;
    line-height: var(--Line-Height-UI-Controls-Control-Button-Small, 16px); /* 100% */
    border-radius: var(--rounded-none, 0px);
    background: #ffffff;

    box-sizing: border-box;
    border: none;
    padding: 12px 40px;
  }

  .pqa-new-form form{
    display: grid;
    grid-template-columns: auto auto;
    grid-gap: 12px;

    @media(max-width: 768px) {
      grid-template-columns: 1fr 1fr;
    }

    select{
      width: 100%;
      color: var(--Content-Inverted-main, #F3F4F6);
      font-family: var(--font-family-Title, "Aktiv Grotesk");
      font-size: 16px;
      font-style: normal;
      font-weight: 400;
      line-height: var(--Line-Height-Heading-H3, 20px); /* 100% */
      letter-spacing: -0.4px;
      cursor: pointer;
      -webkit-appearance: none; /* Fix for Safari */
      -moz-appearance: none; /* Fix for Firefox */
      appearance: none; /* Fix for other browsers */
  
      background: url('data:image/svg+xml;utf8,<svg fill="%23ffffff" width="20px" height="20px" viewBox="-5 -8 24 24" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMinYMin"><path d="M7.071 5.314l4.95-4.95a1 1 0 1 1 1.414 1.414L7.778 7.435a1 1 0 0 1-1.414 0L.707 1.778A1 1 0 1 1 2.121.364l4.95 4.95z"/></svg>');
      background-repeat: no-repeat;
      background-position: top 50% right 8px;
      background-size: 16px;
  
      box-sizing: border-box;
      padding: 8px 30px 8px 8px;
      border: 1px solid #FFF;
      text-transform: capitalize;
    }

    select:focus{
      border: none;
      outline: none;
      box-shadow: none;
      border: 1px solid #FFF;
    }
  }


  @media screen and (max-width: 800px){
    .pqa-new-wrapper{
      grid-gap: 0;
      padding-block: 12px;
    }
    .pqa-new-form button{
      padding: 14px 12px;
    }
    .pqa-new-variants{
      padding: 8px;
    }
    .pqa-new-option select{
      font-size: 11px;
      min-width: 100%;
      max-width: 100%;
    }
    .pqa-new-variants{
      display: grid;
      grid-template-columns: minmax(0,1fr) minmax(0,1fr);
      gap: 12px;
      width: 100%;
    }
  }
</style>

<div class="pqa-container">
  <pqa-new>
    <div class="page-width">
      <div class="pqa-new-wrapper">
        <div class="pqa-new-title">
          {% unless product.selected_or_first_available_variant.featured_image == blank %}
            {{ product.selected_or_first_available_variant.featured_image | image_url: width: 100 | image_tag }}
          {% endunless %}
          <div>
            <p class="qa-title">{{ product.title }}</p>
            <p class="qa-price">{{ product.selected_or_first_available_variant.price | money }}</p>
          </div>
        </div>
        {% comment %}
        <div class="pqa-new-variants">
          {% for option in product.options_with_values %}
            <div class="pqa-new-option">
              <select>
                {% for value in option.values %}
                  <option
                    {% if value.selected %}
                      selected
                    {% endif %}
                    value="{{ value.variant.url }}"
                  >
                    {% if value.available %}
                      {{ value.name }}
                    {% else %}
                      <s>{{ value.name }}</s>
                    {% endif %}
                  </option>
                {% endfor %}
              </select>
            </div>
          {% endfor %}
        </div>
        {% endcomment %}
        <div class="pqa-new-form">
          {% form 'product', product %}
            <input type="hidden" name="quantity" value="1">
            {% for option in product.options_with_values %}
              {% if option.name == 'Color' or option.name == 'color' %}
                <select name="id">
                  {% for value in option.values %}
                    <option value="{{ value.variant.id }}">{{ option.name }}: {{ value.name | downcase }}</option>
                  {% endfor %}
                </select>
              {% endif %}
            {% endfor %}
            <button
              type="submit"
              {% unless product.selected_or_first_available_variant.available %}
                disabled
              {% endunless %}
            >
              {% if product.selected_or_first_available_variant.available %}
                Add to Cart
              {% else %}
                Sold Out
              {% endif %}
            </button>
          {% endform %}
        </div>
      </div>
    </div>
  </pqa-new>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {

    const pinfoFormWrapper = document.querySelector('.pinfo-form-wrapper');
    const pqaNewElement = document.querySelector('pqa-new');
    const footer = document.querySelector(".footer__section");

    // Set up the Intersection Observer
    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          pqaNewElement.classList.remove('sticky-visible');
          footer.parentElement.style.paddingBottom = '0px';
        } else {
          pqaNewElement.classList.add('sticky-visible');
          footer.parentElement.style.paddingBottom = '100px';
        }
      });
    }, {
      threshold: 0.1 // Trigger when at least 10% of the element is in the viewport
    });

    // Start observing the element
    observer.observe(pinfoFormWrapper);

  });
</script>
{% schema %}
{
  "name": "Sticky Add To Cart",
  "enabled_on": {
    "templates": ["product"]
  },
  "presets": [
    {
      "name": "Sticky Add To Cart"
    }
  ],
  "settings": []
}
{% endschema %}
